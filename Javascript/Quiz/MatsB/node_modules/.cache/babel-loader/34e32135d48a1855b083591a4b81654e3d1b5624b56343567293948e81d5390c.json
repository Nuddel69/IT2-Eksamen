{"ast":null,"code":"var _jsxFileName = \"/Users/matsb/Documents/Programmering/Web/quiz/src/components/questions.jsx\";\nimport React, { Component } from \"react\";\nimport Question from \"./question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Questions extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      score: 0,\n      chart: document.getElementByID(\"chart\"),\n      ctx: this.chart.getContext(\"2d\"),\n      questions: [{\n        id: 1,\n        score: 2,\n        question: \"Hva er forskjellen mellom en variabel og en konstant i programmering?\",\n        options: [],\n        correct: 1,\n        category: \"\"\n      }, {\n        id: 2,\n        score: 2,\n        question: \"Hva er hensikten med en variabel?\",\n        options: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n        correct: 1,\n        category: \"\"\n      }, {\n        id: 3,\n        score: 2,\n        question: \"Hva er forskjellen mellom HTML og CSS?\",\n        options: [],\n        correct: 1,\n        category: \"\"\n      }, {\n        id: 4,\n        score: 2,\n        question: 'Hva er forskjellen mellom \"==\" og \"===\" i Javascript?',\n        options: [],\n        correct: 1,\n        category: \"\"\n      }]\n    };\n    this.graderTilRadianer = grader => {\n      return Math.PI * (grader - 90) / 180;\n    };\n    this.handleScore = points => {\n      console.log(\"Event raised\");\n      this.setState({\n        score: this.state.score + points\n      });\n    };\n  }\n  render() {\n    var classes = \"column is-one-third\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes,\n        children: [this.state.questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n          score: question.score,\n          onScore: this.handleScore,\n          category: question.category,\n          id: question.id,\n          options: question.options,\n          correct: question.correct,\n          children: question.question\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title is-3\",\n            children: [\"Poeng: \", this.state.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"chart\",\n            width: \"300\",\n            height: \"300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Question","Questions","state","score","chart","document","getElementByID","ctx","getContext","questions","id","question","options","correct","category","graderTilRadianer","grader","Math","PI","handleScore","points","console","log","setState","render","classes","map"],"sources":["/Users/matsb/Documents/Programmering/Web/quiz/src/components/questions.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Question from \"./question\";\n\nexport default class Questions extends Component {\n  state = {\n    score: 0,\n    chart: document.getElementByID(\"chart\"),\n    ctx: this.chart.getContext(\"2d\"),\n    questions: [\n      {\n        id: 1,\n        score: 2,\n        question:\n          \"Hva er forskjellen mellom en variabel og en konstant i programmering?\",\n        options: [],\n        correct: 1,\n        category: \"\",\n      },\n      {\n        id: 2,\n        score: 2,\n        question: \"Hva er hensikten med en variabel?\",\n        options: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n        correct: 1,\n        category: \"\",\n      },\n      {\n        id: 3,\n        score: 2,\n        question: \"Hva er forskjellen mellom HTML og CSS?\",\n        options: [],\n        correct: 1,\n        category: \"\",\n      },\n      {\n        id: 4,\n        score: 2,\n        question: 'Hva er forskjellen mellom \"==\" og \"===\" i Javascript?',\n        options: [],\n        correct: 1,\n        category: \"\",\n      },\n    ],\n  };\n\n  graderTilRadianer = (grader) => {\n    return (Math.PI * (grader - 90)) / 180;\n  };\n\n  handleScore = (points) => {\n    console.log(\"Event raised\");\n    this.setState({ score: this.state.score + points });\n  };\n  render() {\n    var classes = \"column is-one-third\";\n    return (\n      <div className=\"columns\">\n        <div className={classes}></div>\n        <div className={classes}>\n          {this.state.questions.map((question) => (\n            <Question\n              score={question.score}\n              onScore={this.handleScore}\n              category={question.category}\n              key={question.id}\n              id={question.id}\n              options={question.options}\n              correct={question.correct}\n            >\n              {question.question}\n            </Question>\n          ))}\n          <div>\n            <h1 className=\"title is-3\">Poeng: {this.state.score}</h1>\n            <canvas id=\"chart\" width=\"300\" height=\"300\"></canvas>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}