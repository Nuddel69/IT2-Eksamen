<!DOCTYPE html>
<html>
<head>
  <title>App Store</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
  <style>
    .app-card {
      border: 1px solid #dee2e6;
      border-radius: 4px;
      padding: 15px;
      margin-bottom: 20px;
    }
    .app-card:hover {
      cursor: pointer;
      background-color: #f0f0f0;
    }
  </style>
  <script src="https://code.highcharts.com/highcharts.js"></script>
  <script>
    var jsonData; // Global variable to store the JSON data
    var displayLimit = 25; // Number of entries to display per sort category

    function displayData(sortBy) {
      var xhr = new XMLHttpRequest();
      xhr.overrideMimeType("application/json");
      xhr.open('GET', 'googleplaystore.json', true);
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4 && xhr.status == "200") {
          jsonData = JSON.parse(xhr.responseText);
          sortApps(sortBy);
        }
      };
      xhr.send(null);
    }


    function sortApps(sortBy) {
      var sortedApps;

      if (sortBy === 'installs') {
        sortedApps = jsonData.sort(function (a, b) {
          return parseInt(b.Installs.replace(/\D/g, '')) - parseInt(a.Installs.replace(/\D/g, ''));
        });
      } else if (sortBy === 'rating') {
        sortedApps = jsonData.sort(function (a, b) {
          return parseFloat(b.Rating) - parseFloat(a.Rating);
        });
      } else if (sortBy === 'size') {
        sortedApps = jsonData.sort(function (a, b) {
          return parseFloat(b.Size) - parseFloat(a.Size);
        });
      } else if (sortBy === 'price') {
        sortedApps = jsonData.sort(function (a, b) {
          var priceA = extractNumericValue(a.Price);
          var priceB = extractNumericValue(b.Price);

          if (priceA === priceB) {
            return 0;
          } else if (priceA > priceB) {
            return -1;
          } else {
            return 1;
          }
        });
      } else {
        console.log('Invalid sort criteria');
        return;
      }

      displayApps(sortedApps.slice(0, displayLimit), sortBy); // Display limited number of apps

      countContentRating(jsonData); // Count apps per content rating for the entire dataset
      countCategory(jsonData); // Count apps per category for the entire dataset
    }


    function countContentRating(apps) {
      var contentRatingCount = {};

      for (var i = 0; i < apps.length; i++) {
        var app = apps[i];
        var contentRating = app['Content Rating'];

        if (contentRatingCount.hasOwnProperty(contentRating)) {
          contentRatingCount[contentRating]++;
        } else {
          contentRatingCount[contentRating] = 1;
        }
      }

      displayContentRatingCount(contentRatingCount);
    }

    function countCategory(apps) {
      var categoryCount = {};

      for (var i = 0; i < apps.length; i++) {
        var app = apps[i];
        var category = app.Category;

        if (categoryCount.hasOwnProperty(category)) {
          categoryCount[category]++;
        } else {
          categoryCount[category] = 1;
        }
      }

      displayCategoryCount(categoryCount);
    }

    function displayApps(apps, sortBy) {
      var appContainer = document.getElementById("app-container");
      appContainer.innerHTML = ""; // Clear previous app cards

      var sortLabel = document.getElementById("sort-category-label");
      sortLabel.textContent = getSortLabel(sortBy);

      for (var i = 0; i < apps.length; i++) {
        var app = apps[i];
        var card = createAppCard(app);
        appContainer.appendChild(card);
      }
    }

    function createAppCard(app) {
      var card = document.createElement("div");
      card.className = "app-card";
      card.addEventListener("click", function () {
        showAppDetails(app);
      });

      var appName = document.createElement("h4");
      appName.textContent = app['App'];

      var appCategory = document.createElement("p");
      appCategory.textContent = "Category: " + app['Category'];

      var appRating = document.createElement("p");
      appRating.textContent = "Rating: " + app['Rating'];

      var appInstalls = document.createElement("p");
      appInstalls.textContent = "Installs: " + app['Installs'];

      var appPrice = document.createElement("p");
      appPrice.textContent = "Price: " + app['Price'];

      card.appendChild(appName);
      card.appendChild(appCategory);
      card.appendChild(appRating);
      card.appendChild(appInstalls);
      card.appendChild(appPrice);

      return card;
    }

    function showAppDetails(app) {
      // Replace with your own logic to display app details
      alert("Showing details for app: " + app['App']);
    }

    function displayContentRatingCount(contentRatingCount) {
      var contentRatingData = Object.keys(contentRatingCount).map(function (key) {
        return [key, contentRatingCount[key]];
      });

      Highcharts.chart('content-rating-chart', {
        chart: {
          type: 'column'
        },
        title: {
          text: 'App Count by Content Rating'
        },
        xAxis: {
          type: 'category'
        },
        yAxis: {
          title: {
            text: 'Count'
          }
        },
        series: [{
          name: 'Count',
          data: contentRatingData
        }]
      });
    }

    function displayCategoryCount(categoryCount) {
      var categoryData = Object.keys(categoryCount).map(function (key) {
        return [key, categoryCount[key]];
      });

      Highcharts.chart('category-chart', {
        chart: {
          type: 'pie'
        },
        title: {
          text: 'App Count by Category'
        },
        series: [{
          name: 'Count',
          data: categoryData
        }]
      });
    }

    function extractNumericValue(price) {
      return parseFloat(price.replace('$', ''));
    }

    function getSortLabel(sortBy) {
      if (sortBy === 'installs') {
        return 'Sort by Installs';
      } else if (sortBy === 'rating') {
        return 'Sort by Rating';
      } else if (sortBy === 'size') {
        return 'Sort by Size';
      } else if (sortBy === 'price') {
        return 'Sort by Price';
      } else {
        return 'Invalid Sort Criteria';
      }
    }

    displayData('installs'); // Initial display by installs
  </script>
</head>
<body>
  <h1>App Store</h1>
  <div id="sort-buttons">
    <button onclick="displayData('installs')">Sort by Installs</button>
    <button onclick="displayData('rating')">Sort by Rating</button>
    <button onclick="displayData('size')">Sort by Size</button>
    <button onclick="displayData('price')">Sort by Price</button>
  </div>
  <h2 id="sort-category-label"></h2>
  <div id="app-container"></div>
  <div id="content-rating-chart"></div>
  <div id="category-chart"></div>
</body>
</html>
